<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from right_resolved.urdf.xacro      | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /ros2_ws/install/ur/share/ur/xacro/ur_spawn.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="right_srm">
  <link name="world"/>
  <!--
    Base UR robot series xacro macro.

    NOTE this is NOT a URDF. It cannot directly be loaded by consumers
    expecting a flattened '.urdf' file. See the top-level '.xacro' for that
    (but note that .xacro must still be processed by the xacro command).

    This file models the base kinematic chain of a UR robot, which then gets
    parameterised by various configuration files to convert it into a UR3(e),
    UR5(e), UR10(e) or UR16e.

    NOTE the default kinematic parameters (i.e., link lengths, frame locations,
    offsets, etc) do not correspond to any particular robot. They are defaults
    only. There WILL be non-zero offsets between the Forward Kinematics results
    in TF (i.e., robot_state_publisher) and the values reported by the Teach
    Pendant.

    For accurate (and robot-specific) transforms, the 'kinematics_parameters_file'
    parameter MUST point to a .yaml file containing the appropriate values for
    the targeted robot.

    If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps
    described in the readme of that repository to extract the kinematic
    calibration from the controller and generate the required .yaml file.

    Main author of the migration to yaml configs Ludovic Delval.

    Contributors to previous versions (in no particular order)

     - Denis Stogl
     - Lovro Ivanov
     - Felix Messmer
     - Kelsey Hawkins
     - Wim Meeussen
     - Shaun Edwards
     - Nadia Hammoudeh Garcia
     - Dave Hershberger
     - G. vd. Hoorn
     - Philip Long
     - Dave Coleman
     - Miguel Prada
     - Mathias Luedtke
     - Marcel Schnirring
     - Felix von Drigalski
     - Felix Exner
     - Jimmy Da Silva
     - Ajit Krisshna N L
     - Muhammad Asif Rana
  -->
  <!--
    NOTE the macro defined in this file is NOT part of the public API of this
          package. Users CANNOT rely on this file being available, or stored in
          this location. Nor can they rely on the existence of the macro.
  -->
  <!-- istanziare la macro-->
  <ros2_control name="right_ur" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="ur_right_shoulder_pan_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">-1.3</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="ur_right_shoulder_lift_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">-0.8</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="ur_right_elbow_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">-1.8</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="ur_right_wrist_1_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">-1.57</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="ur_right_wrist_2_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">1.638</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="ur_right_wrist_3_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
  </ros2_control>
  <transmission name="ur_right_shoulder_pan_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur_right_shoulder_pan_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur_right_shoulder_pan_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="ur_right_shoulder_lift_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur_right_shoulder_lift_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur_right_shoulder_lift_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="ur_right_elbow_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur_right_elbow_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur_right_elbow_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="ur_right_wrist_1_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur_right_wrist_1_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur_right_wrist_1_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="ur_right_wrist_2_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur_right_wrist_2_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur_right_wrist_2_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="ur_right_wrist_3_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur_right_wrist_3_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur_right_wrist_3_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Placeholder for ros2_control transmission which don't yet exist -->
  <!-- links -  main serial chain -->
  <link name="ur_right_base_link"/>
  <link name="ur_right_base_link_inertia">
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/visual/base.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/collision/base.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4.0"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00443333156" ixy="0.0" ixz="0.0" iyy="0.00443333156" iyz="0.0" izz="0.0072"/>
    </inertial>
  </link>
  <link name="ur_right_shoulder_link">
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/visual/shoulder.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/collision/shoulder.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="3.761"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.01043677082529" ixy="0.0" ixz="0.0" iyy="0.01043677082529" iyz="0.0" izz="0.006769799999999999"/>
    </inertial>
  </link>
  <link name="ur_right_upper_arm_link">
    <visual>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.138"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/visual/upperarm.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.138"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/collision/upperarm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.058"/>
      <origin rpy="0 1.5707963267948966 0" xyz="-0.2125 0.0 0.138"/>
      <inertia ixx="0.128541836083245" ixy="0.0" ixz="0.0" iyy="0.128541836083245" iyz="0.0" izz="0.014504399999999999"/>
    </inertial>
  </link>
  <link name="ur_right_forearm_link">
    <visual>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.007"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/visual/forearm.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.007"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/collision/forearm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.846"/>
      <origin rpy="0 1.5707963267948966 0" xyz="-0.1961 0.0 0.007"/>
      <inertia ixx="0.03904256026963631" ixy="0.0" ixz="0.0" iyy="0.03904256026963631" iyz="0.0" izz="0.005122799999999999"/>
    </inertial>
  </link>
  <link name="ur_right_wrist_1_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.127"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/visual/wrist1.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.127"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/collision/wrist1.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.37"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0028769988492000002" ixy="0.0" ixz="0.0" iyy="0.0028769988492000002" iyz="0.0" izz="0.0024660000000000003"/>
    </inertial>
  </link>
  <link name="ur_right_wrist_2_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.0997"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/visual/wrist2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.0997"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/collision/wrist2.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.3"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.002729998908" ixy="0.0" ixz="0.0" iyy="0.002729998908" iyz="0.0" izz="0.00234"/>
    </inertial>
  </link>
  <link name="ur_right_wrist_3_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0989"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/visual/wrist3.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0989"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/ur_description/share/ur_description/meshes/ur5e/collision/wrist3.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.365"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 -0.0229"/>
      <inertia ixx="0.00019212345231725498" ixy="0.0" ixz="0.0" iyy="0.00019212345231725498" iyz="0.0" izz="0.000256640625"/>
    </inertial>
  </link>
  <!-- base_joint fixes base_link to the environment -->
  <joint name="right_base_joint" type="fixed">
    <parent link="world"/>
    <child link="right_summit_base_footprint"/>
    <origin rpy="0 0 0" xyz="1.32 0 0.123316"/>
  </joint>

  <joint name="ur_right_base_joint" type="fixed">
    <origin rpy="0 0 1.57" xyz="0 0 0.543"/>
    <parent link="right_summit_base_footprint"/>
    <child link="ur_right_base_link"/>
  </joint>
  <!-- joints - main serial chain -->
  <joint name="ur_right_base_link-base_link_inertia" type="fixed">
    <parent link="ur_right_base_link"/>
    <child link="ur_right_base_link_inertia"/>
    <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
  </joint>
  <joint name="ur_right_shoulder_pan_joint" type="revolute">
    <parent link="ur_right_base_link_inertia"/>
    <child link="ur_right_shoulder_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.1625"/>
    <axis xyz="0 0 1"/>
    <limit effort="150.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
    <safety_controller k_position="20" k_velocity="3.0" soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="ur_right_shoulder_lift_joint" type="revolute">
    <parent link="ur_right_shoulder_link"/>
    <child link="ur_right_upper_arm_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="150.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
    <safety_controller k_position="20" k_velocity="3.0" soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="ur_right_elbow_joint" type="revolute">
    <parent link="ur_right_upper_arm_link"/>
    <child link="ur_right_forearm_link"/>
    <origin rpy="0 0 0" xyz="-0.425 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="150.0" lower="-3.141592653589793" upper="3.141592653589793" velocity="3.141592653589793"/>
    <safety_controller k_position="20" k_velocity="3.0" soft_lower_limit="-2.991592653589793" soft_upper_limit="2.991592653589793"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="ur_right_wrist_1_joint" type="revolute">
    <parent link="ur_right_forearm_link"/>
    <child link="ur_right_wrist_1_link"/>
    <origin rpy="0 0 0" xyz="-0.3922 0 0.1333"/>
    <axis xyz="0 0 1"/>
    <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
    <safety_controller k_position="20" k_velocity="3.0" soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="ur_right_wrist_2_joint" type="revolute">
    <parent link="ur_right_wrist_1_link"/>
    <child link="ur_right_wrist_2_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 -0.0997 -2.044881182297852e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
    <safety_controller k_position="20" k_velocity="3.0" soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="ur_right_wrist_3_joint" type="revolute">
    <parent link="ur_right_wrist_2_link"/>
    <child link="ur_right_wrist_3_link"/>
    <origin rpy="1.570796326589793 3.141592653589793 3.141592653589793" xyz="0 0.0996 -2.042830148012698e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
    <safety_controller k_position="20" k_velocity="3.0" soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <link name="ur_right_ft_frame"/>
  <joint name="ur_right_wrist_3_link-ft_frame" type="fixed">
    <parent link="ur_right_wrist_3_link"/>
    <child link="ur_right_ft_frame"/>
    <origin rpy="3.141592653589793 0 0" xyz="0 0 0"/>
  </joint>
  <!-- ROS-Industrial 'base' frame - base_link to UR 'Base' Coordinates transform -->
  <link name="ur_right_base"/>
  <joint name="ur_right_base_link-base_fixed_joint" type="fixed">
    <!-- Note the rotation over Z of pi radians - as base_link is REP-103
           aligned (i.e., has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
    <parent link="ur_right_base_link"/>
    <child link="ur_right_base"/>
  </joint>
  <!-- ROS-Industrial 'flange' frame - attachment point for EEF models -->
  <link name="ur_right_flange"/>
  <joint name="ur_right_wrist_3-flange" type="fixed">
    <parent link="ur_right_wrist_3_link"/>
    <child link="ur_right_flange"/>
    <origin rpy="0 -1.5707963267948966 1.5707963267948966" xyz="0 0 0"/>
  </joint>
  <!-- ROS-Industrial 'tool0' frame - all-zeros tool frame -->
  <link name="ur_right_tool0"/>
  <joint name="ur_right_flange-tool0" type="fixed">
    <!-- default toolframe - X+ left, Y+ up, Z+ front -->
    <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 0"/>
    <parent link="ur_right_flange"/>
    <child link="ur_right_tool0"/>
  </joint>
  <gazebo reference="ur_right_shoulder_link">
    <gravity>0</gravity>
  </gazebo>
  <gazebo reference="ur_right_upper_arm_link">
    <gravity>0</gravity>
  </gazebo>
  <gazebo reference="ur_right_forearm_link">
    <gravity>0</gravity>
  </gazebo>
  <gazebo reference="ur_right_wrist_1_link">
    <gravity>0</gravity>
  </gazebo>
  <gazebo reference="ur_right_wrist_2_link">
    <gravity>0</gravity>
  </gazebo>
  <gazebo reference="ur_right_wrist_3_link">
    <gravity>0</gravity>
  </gazebo>
  <!-- *origin-->
    <link name="ur_right_paletta">
    <visual>
      <origin rpy="0 -1.570796327 3.141592654" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/src/simod_proj/paletta_simod/meshes/paletta_v1_simplified_to_mm.stl"> 
        </mesh>
      </geometry>
      <material name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/src/simod_proj/paletta_simod/meshes/paletta_v1_simplified_to_mm.stl"> 
        </mesh>
      </geometry>
    </collision>
    <gravity>0</gravity>
  </link>
  <joint name="ur_right_ee_joint" type="fixed">
    <parent link="ur_right_tool0"/>
    <child link="ur_right_paletta"/>
    <origin rpy="0 -1.57 0" xyz="0 0 0"/> <!-- Set the correct pose here -->
  </joint>
  <!-- ***************** -->
  <!-- Imported elements -->
  <!-- ***************** -->
  <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
  <gazebo reference="base_footprint">
    <material>Gazebo/Green</material>
  </gazebo>
  <!-- in kg-->
  <!-- source en.wikipedia.org/wiki/List_of_moments_of_inertia-->
  <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
  <!-- Includes -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="ros_control">
      <robotParam>robot_description</robotParam>
      <controlPeriod>0.001</controlPeriod>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>
  <!-- *************** -->
  <!-- Robots Elements -->
  <!-- *************** -->
  <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->
  <link name="right_summit_base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.5"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <gazebo reference="right_summit_base_footprint">
    <gravity>0</gravity>
  </gazebo>
  <joint name="right_summit_base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.127"/>
    <!-- ${wheel_radius} property must be defined inside wheel description -->
    <parent link="right_summit_base_footprint"/>
    <child link="right_summit_base_link"/>
  </joint>
  <!-- <gazebo reference="${prefix}base_footprint">
      <ode>
        <solver>
          <type>quick</type>
          <iters>0</iters>
          <sor>1.0</sor>
        </solver>
      </ode>
    </gazebo> -->
  <!-- BASE_LINK -->
  <link name="right_summit_base_link">
    <inertial>
      <mass value="125.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/summit_xl_description/share/summit_xl_description/meshes/bases/xls/summit_xls_chassis.stl"/>
      </geometry>
      <material name="black">
        <color rgba="0.0 0.0 0.0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/summit_xl_description/share/summit_xl_description/meshes/bases/xls/summit_xls_chassis.dae"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="right_summit_base_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- CHAPAS INOX TAPAS -->
  <link name="right_summit_base_chapa">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/summit_xl_description/share/summit_xl_description/meshes/bases/xls/summit_xls_chapas_inox_tapas.stl"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
  </link>
  <joint name="right_summit_base_tapa_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0 0.38062"/>
    <parent link="right_summit_base_link"/>
    <child link="right_summit_base_chapa"/>
  </joint>
  <!-- LOGO ROBOTNIK IZQUIERDO -->
  <link name="right_summit_base_logo_left">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/summit_xl_description/share/summit_xl_description/meshes/bases/xls/robotnik_logo_chasis.stl"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
  </link>
  <joint name="right_summit_base_logo_left_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.28931 0.29062"/>
    <parent link="right_summit_base_link"/>
    <child link="right_summit_base_logo_left"/>
  </joint>
  <!-- LOGO ROBOTNIK DERECHO -->
  <link name="right_summit_base_logo_right">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/summit_xl_description/share/summit_xl_description/meshes/bases/xls/robotnik_logo_chasis.stl"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
  </link>
  <joint name="right_summit_base_logo_right_joint" type="fixed">
    <origin rpy="0 0 3.141592653589793" xyz="0.0 -0.28931 0.29062"/>
    <parent link="right_summit_base_link"/>
    <child link="right_summit_base_logo_right"/>
  </joint>
  <!-- LOGO ROBOTNIK FRONTAL -->
  <link name="right_summit_base_logo_front">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/summit_xl_description/share/summit_xl_description/meshes/bases/xls/robotnik_logo_chasis.stl"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
  </link>
  <joint name="right_summit_base_logo_front_joint" type="fixed">
    <origin rpy="0 0 -1.5707963267948966" xyz="0.345 0.0 0.0"/>
    <parent link="right_summit_base_link"/>
    <child link="right_summit_base_logo_front"/>
  </joint>
  <!-- LOGO ROBOTNIK TRASERO -->
  <link name="right_summit_base_logo_rear">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/summit_xl_description/share/summit_xl_description/meshes/bases/xls/robotnik_logo_chasis.stl"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
  </link>
  <joint name="right_summit_base_logo_rear_joint" type="fixed">
    <origin rpy="0 0 1.5707963267948966" xyz="-0.345 0.0 0.0"/>
    <parent link="right_summit_base_link"/>
    <child link="right_summit_base_logo_rear"/>
  </joint>
  <!-- DOCKING CONTACT -->
  <link name="right_summit_base_docking_contact">
    </link>
  <joint name="right_summit_base_docking_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.35 0 0.09"/>
    <parent link="right_summit_base_link"/>
    <child link="right_summit_base_docking_contact"/>
  </joint>
  <joint name="right_summit_front_right_wheel_joint" type="continuous">
    <parent link="right_summit_base_link"/>
    <child link="right_summit_front_right_wheel_link"/>
    <origin rpy="0 0.2 0" xyz="0.2225 -0.2045 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="right_summit_front_right_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/summit_xl_description/share/summit_xl_description/meshes/wheels/omni_wheel_2.dae"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <!--sphere radius="${omni_wheel_radius}" /-->
        <!--
          <xacro:if value="${reflect}">
              <mesh filename="file://$(find summit_xl_description)/meshes/wheels/omni_wheel_1.dae" />
          </xacro:if>
          <xacro:unless value="${reflect}">
              <mesh filename="file://$(find summit_xl_description)/meshes/wheels/omni_wheel_2.dae" />
					</xacro:unless>
-->
        <cylinder length="0.087" radius="0.127"/>
        <!-- sphere radius="${omni_wheel_radius}"/-->
      </geometry>
    </collision>
    <inertial>
      <mass value="6.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0303095" ixy="0" ixz="0" iyy="0.05241925" iyz="0" izz="0.0303095"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="right_summit_front_right_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_summit_front_right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_summit_front_right_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- <gazebo reference="${prefix}_wheel_link">
		<mu1 value="0.0"/>
		<mu2 value="0.0"/>
		<kp value="10000000.0" />
		<kd value="1.0" />
		<fdir1 value="1 0 0"/>
        <turnGravityOff>false</turnGravityOff>
    </gazebo> -->
  <gazebo reference="right_summit_front_right_wheel_link">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <minDepth>0.001</minDepth>
    <kp>100000000</kp>
    <kd>1</kd>
  </gazebo>
  <gazebo reference="right_summit_front_right_wheel_link">
    <implicitSpringDamper>true</implicitSpringDamper>
  </gazebo>
  <joint name="right_summit_front_left_wheel_joint" type="continuous">
    <parent link="right_summit_base_link"/>
    <child link="right_summit_front_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.2225 0.2045 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="right_summit_front_left_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/summit_xl_description/share/summit_xl_description/meshes/wheels/omni_wheel_1.dae"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <!--sphere radius="${omni_wheel_radius}" /-->
        <!--
          <xacro:if value="${reflect}">
              <mesh filename="file://$(find summit_xl_description)/meshes/wheels/omni_wheel_1.dae" />
          </xacro:if>
          <xacro:unless value="${reflect}">
              <mesh filename="file://$(find summit_xl_description)/meshes/wheels/omni_wheel_2.dae" />
					</xacro:unless>
-->
        <cylinder length="0.087" radius="0.127"/>
        <!-- sphere radius="${omni_wheel_radius}"/-->
      </geometry>
    </collision>
    <inertial>
      <mass value="6.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0303095" ixy="0" ixz="0" iyy="0.05241925" iyz="0" izz="0.0303095"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="right_summit_front_left_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_summit_front_left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_summit_front_left_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- <gazebo reference="${prefix}_wheel_link">
		<mu1 value="0.0"/>
		<mu2 value="0.0"/>
		<kp value="10000000.0" />
		<kd value="1.0" />
		<fdir1 value="1 0 0"/>
        <turnGravityOff>false</turnGravityOff>
    </gazebo> -->
  <gazebo reference="right_summit_front_left_wheel_link">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <minDepth>0.001</minDepth>
    <kp>100000000</kp>
    <kd>1</kd>
  </gazebo>
  <gazebo reference="right_summit_front_left_wheel_link">
    <implicitSpringDamper>true</implicitSpringDamper>
  </gazebo>
  <joint name="right_summit_back_left_wheel_joint" type="continuous">
    <parent link="right_summit_base_link"/>
    <child link="right_summit_back_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.2225 0.2045 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="right_summit_back_left_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/summit_xl_description/share/summit_xl_description/meshes/wheels/omni_wheel_1.dae"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <!--sphere radius="${omni_wheel_radius}" /-->
        <!--
          <xacro:if value="${reflect}">
              <mesh filename="file://$(find summit_xl_description)/meshes/wheels/omni_wheel_1.dae" />
          </xacro:if>
          <xacro:unless value="${reflect}">
              <mesh filename="file://$(find summit_xl_description)/meshes/wheels/omni_wheel_2.dae" />
					</xacro:unless>
-->
        <cylinder length="0.087" radius="0.127"/>
        <!-- sphere radius="${omni_wheel_radius}"/-->
      </geometry>
    </collision>
    <inertial>
      <mass value="6.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0303095" ixy="0" ixz="0" iyy="0.05241925" iyz="0" izz="0.0303095"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="right_summit_back_left_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_summit_back_left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_summit_back_left_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- <gazebo reference="${prefix}_wheel_link">
		<mu1 value="0.0"/>
		<mu2 value="0.0"/>
		<kp value="10000000.0" />
		<kd value="1.0" />
		<fdir1 value="1 0 0"/>
        <turnGravityOff>false</turnGravityOff>
    </gazebo> -->
  <gazebo reference="right_summit_back_left_wheel_link">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <minDepth>0.001</minDepth>
    <kp>100000000</kp>
    <kd>1</kd>
  </gazebo>
  <gazebo reference="right_summit_back_left_wheel_link">
    <implicitSpringDamper>true</implicitSpringDamper>
  </gazebo>
  <joint name="right_summit_back_right_wheel_joint" type="continuous">
    <parent link="right_summit_base_link"/>
    <child link="right_summit_back_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.2225 -0.2045 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="right_summit_back_right_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/summit_xl_description/share/summit_xl_description/meshes/wheels/omni_wheel_2.dae"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <!--sphere radius="${omni_wheel_radius}" /-->
        <!--
          <xacro:if value="${reflect}">
              <mesh filename="file://$(find summit_xl_description)/meshes/wheels/omni_wheel_1.dae" />
          </xacro:if>
          <xacro:unless value="${reflect}">
              <mesh filename="file://$(find summit_xl_description)/meshes/wheels/omni_wheel_2.dae" />
					</xacro:unless>
-->
        <cylinder length="0.087" radius="0.127"/>
        <!-- sphere radius="${omni_wheel_radius}"/-->
      </geometry>
    </collision>
    <inertial>
      <mass value="6.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0303095" ixy="0" ixz="0" iyy="0.05241925" iyz="0" izz="0.0303095"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="right_summit_back_right_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_summit_back_right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_summit_back_right_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- <gazebo reference="${prefix}_wheel_link">
		<mu1 value="0.0"/>
		<mu2 value="0.0"/>
		<kp value="10000000.0" />
		<kd value="1.0" />
		<fdir1 value="1 0 0"/>
        <turnGravityOff>false</turnGravityOff>
    </gazebo> -->
  <gazebo reference="right_summit_back_right_wheel_link">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <minDepth>0.001</minDepth>
    <kp>100000000</kp>
    <kd>1</kd>
  </gazebo>
  <gazebo reference="right_summit_back_right_wheel_link">
    <implicitSpringDamper>true</implicitSpringDamper>
  </gazebo>
  <joint name="right_summit_imu_joint" type="fixed">
    <axis xyz="1 0 0"/>
    <!--origin xyz="0 0 0.2825"/-->
    <origin rpy="0 0 0" xyz="0.127 -0.129 0.212"/>
    <parent link="right_summit_base_link"/>
    <child link="right_summit_imu_link"/>
  </joint>
  <link name="right_summit_imu_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0 0.01"/>
      <mass value="0.005"/>
      <inertia ixx="8.333333333333334e-10" ixy="0" ixz="0" iyy="8.333333333333334e-10" iyz="0" izz="8.333333333333334e-10"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <!--collision>
	        <origin rpy="0 0 0" xyz="0 0 0"/>
	        <geometry>
	          <box size="0.001 0.001 0.001"/>
	        </geometry>
	      </collision-->
  </link>
  <!--<gazebo>-->
  <!--<plugin name="${prefix}_controller" filename="libgazebo_ros_imu.so">-->
  <!--<topicName>${ns}imu/data</topicName>-->
  <!--<serviceName>imu/service</serviceName>-->
  <!--<bodyName>${prefix}_link</bodyName>-->
  <!--<updateRateHZ>50.0</updateRateHZ>-->
  <!--<gaussianNoise>0.0</gaussianNoise>-->
  <!--</plugin>-->
  <!--</gazebo>-->
  <gazebo reference="right_summit_imu_link">
    <gravity>true</gravity>
    <sensor name="right_summit_imu_imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="right_summit_imu_imu_plugin">
        <topicName>imu/data</topicName>
        <bodyName>right_summit_imu_link</bodyName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>right_summit_imu_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <joint name="right_summit_front_laser_base_joint" type="fixed">
    <origin rpy="0 -3.141592653589793 2.356194490192345" xyz="0.2865 -0.20894 0.2973"/>
    <parent link="right_summit_base_link"/>
    <child link="right_summit_front_laser_base_link"/>
    <limit effort="100" lower="0.0" upper="0.0" velocity="100"/>
  </joint>
  <link name="right_summit_front_laser_base_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!--<box size="0.106 0.094 0.152"/>-->
        <!--<cylinder radius="0.058" length="0.152"/>-->
        <mesh filename="package://robotnik_sensors/meshes/sick_s300.dae"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="-1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/sick_s300_color.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1.2"/>
      <origin rpy="0 0 0" xyz="0 0.0 0.0751"/>
      <inertia ixx="0.0034339999999999996" ixy="0" ixz="0" iyy="0.0033507999999999993" iyz="0" izz="0.0021639999999999997"/>
    </inertial>
  </link>
  <joint name="right_summit_front_laser_joint" type="fixed">
    <parent link="right_summit_front_laser_base_link"/>
    <child link="right_summit_front_laser_link"/>
    <origin rpy="0 0 0" xyz="0.0 0 0.116"/>
  </joint>
  <link name="right_summit_front_laser_link"/>
  <gazebo reference="right_summit_front_laser_link">
    <sensor name="right_summit_front_laser_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>12.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>541</samples>
            <resolution>1</resolution>
            <min_angle>-2.3562</min_angle>
            <max_angle>2.3562</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.03</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.03</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="right_summit_front_laser_controller">
        <ros>
          <remapping>~/out:=front_laser/scan</remapping>
        </ros>
        <!-- when leaving away frame_name it defaults to base_footprint instead-->
        <frame_name>right_summit_front_laser_link</frame_name>
        <output_type>sensor_msgs/LaserScan</output_type>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="right_summit_rear_laser_base_joint" type="fixed">
    <origin rpy="0 -3.141592653589793 -0.7853981633974483" xyz="-0.2865 0.20894 0.2973"/>
    <parent link="right_summit_base_link"/>
    <child link="right_summit_rear_laser_base_link"/>
    <limit effort="100" lower="0.0" upper="0.0" velocity="100"/>
  </joint>
  <link name="right_summit_rear_laser_base_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!--<box size="0.106 0.094 0.152"/>-->
        <!--<cylinder radius="0.058" length="0.152"/>-->
        <mesh filename="package://robotnik_sensors/meshes/sick_s300.dae"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="-1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/sick_s300_color.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1.2"/>
      <origin rpy="0 0 0" xyz="0 0.0 0.0751"/>
      <inertia ixx="0.0034339999999999996" ixy="0" ixz="0" iyy="0.0033507999999999993" iyz="0" izz="0.0021639999999999997"/>
    </inertial>
  </link>
  <joint name="right_summit_rear_laser_joint" type="fixed">
    <parent link="right_summit_rear_laser_base_link"/>
    <child link="right_summit_rear_laser_link"/>
    <origin rpy="0 0 0" xyz="0.0 0 0.116"/>
  </joint>
  <link name="right_summit_rear_laser_link"/>
  <gazebo reference="right_summit_rear_laser_link">
    <sensor name="right_summit_rear_laser_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>12.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>541</samples>
            <resolution>1</resolution>
            <min_angle>-2.3562</min_angle>
            <max_angle>2.3562</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.03</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.03</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="right_summit_rear_laser_controller">
        <ros>
          <remapping>~/out:=rear_laser/scan</remapping>
        </ros>
        <!-- when leaving away frame_name it defaults to base_footprint instead-->
        <frame_name>right_summit_rear_laser_link</frame_name>
        <output_type>sensor_msgs/LaserScan</output_type>
      </plugin>
    </sensor>
  </gazebo>
  <!--xacro:sensor_axis_m5013 prefix="$(arg prefix)front_ptz_camera" parent="$(arg prefix)base_link">
			<origin xyz="${front_ptz_camera_offset_x} ${front_ptz_camera_offset_y} ${front_ptz_camera_offset_z}" rpy="${-PI/2} 0 0"/>
		</xacro:sensor_axis_m5013-->
  <!--xacro:sensor_axis_m5013 prefix="$(arg prefix)rear_ptz_camera" parent="$(arg prefix)base_link">
			<origin xyz="${rear_ptz_camera_offset_x} ${rear_ptz_camera_offset_y} ${rear_ptz_camera_offset_z}" rpy="${-PI/2} 0 ${PI}"/>
		</xacro:sensor_axis_m5013-->
  <!-- <xacro:sensor_orbbec_astra prefix="$(arg prefix)front_rgbd_camera" parent="$(arg prefix)base_link" prefix_topic="front_rgbd_camera">
			<origin xyz="${front_rgbd_camera_offset_x} ${front_rgbd_camera_offset_y} ${front_rgbd_camera_offset_z}" rpy="0 0 0"/>
		</xacro:sensor_orbbec_astra> -->
  <!--xacro:sensor_gps prefix="$(arg prefix)gps" parent="$(arg prefix)base_link">
			<origin xyz="${gps_offset_x} ${gps_offset_y} ${gps_offset_z}" rpy="0 0 0"/>
		</xacro:sensor_gps-->
  <gazebo>
    <plugin filename="libgazebo_ros_planar_move.so" name="omni_steering">
      <namespace>right_summit</namespace>
      <command_topic>right_summit/cmd_vel</command_topic>
      <odometry_topic>right_summit/odom</odometry_topic>
      <odometry_frame>right_summit_odom</odometry_frame>
      <odometryRate>50.0</odometryRate>
      <robot_base_frame>right_summit_base_footprint</robot_base_frame>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <enableYAxis>true</enableYAxis>
    </plugin>
  </gazebo>
  <!-- <xacro:summit_xl prefix="${prefix)}" publish_bf="true" hq="true"/> -->
  <gazebo reference="world">
        </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="right_gazebo_ros2_control">
      <parameters>/ros2_ws/install/ur/share/ur/config/right_controller.yaml</parameters>
      <ros>
        <namespace>right</namespace>
      </ros>
    </plugin>
  </gazebo>
  <plugin filename="libgazebo_ros2_state.so" name="right_gazebo_ros_state">
    <ros>
      <namespace>right</namespace>
    </ros>
    <update_rate>1.0</update_rate>
  </plugin>
</robot>
